# Introduction

## What is Cyclonetix?

Cyclonetix is a lightweight, Rust-based workflow orchestrator designed to be **fast, easy to use, and highly scalable**. It is built for **both cloud-native and on-premises deployments**, supporting **outcome-based scheduling, self-assembling DAGs, and manual DAG execution**.

With Cyclonetix, you can:

- **Define tasks** with dependencies, commands, and parameters
- **Build execution graphs** explicitly or let them self-assemble
- **Schedule outcomes** and let the system determine the execution path
- **Monitor executions** in real-time through a modern web UI
- **Scale** from development environments to large-scale production deployments

## Key Features

Cyclonetix aims to be:

- **Effortlessly simple to get started with**
- **Exceptionally fast and lightweight**
- **Flexible enough for both beginners and enterprise-scale workloads**
- **Clever by design, reducing user cognitive load**
- **Capable of advanced scheduling mechanisms** (outcome-based scheduling + explicit DAG execution)

## Project Philosophy

Cyclonetix was designed with several core principles in mind:

1. **Reduce cognitive load** - Users shouldn't need to understand complex concepts to orchestrate simple workflows
2. **Start small, scale big** - The same system should work for both local development and massive production deployments
3. **Simple things should be simple, complex things should be possible** - Basic use cases should require minimal effort
4. **Design for the real world** - Built based on experience with real-world orchestration challenges
5. **Performance matters** - A lightweight core that executes jobs efficiently with minimal overhead

Whether you're running data pipelines, ML training jobs, or software deployment processes, Cyclonetix provides the flexibility, performance, and ease of use to make your workflow orchestration simpler and more efficient.

## Where to Go Next

- [Getting Started](getting-started.qmd) - Install and run your first workflow
- [Core Concepts](core-concepts/architecture.qmd) - Learn about Cyclonetix's architecture
- [User Guide](user-guide/task-definition.qmd) - Practical guides for using Cyclonetix
- [Developer Guide](developer-guide.qmd) - Contributing to Cyclonetix